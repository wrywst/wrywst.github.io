<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客的开始和重启</title>
      <link href="/2024/08/30/blog/"/>
      <url>/2024/08/30/blog/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2022年"><a href="#2022年" class="headerlink" title="2022年"></a>2022年</h2><blockquote><p>以下都是回忆，时间太久可能有不准确的地方。感觉当时是什么也不懂，不懂前端不懂后端，在学校学大底都是基础的知识。数据结构，计算机网络，计算机组成原理，操作系统，还有各种语言：c，c++，java，python。因此对于这些更高层次（基础知识是基础，上面的框架就是高楼）的东西就不懂，所以所有东西都很新鲜，我甚至是第一次知道<code>nginx，node.js</code>。</p></blockquote><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>只要是计算机专业的学生肯定都听说过博客是学计算机用来记录技术的一种方式，但是很少有人（起码我身边没有）愿意花时间来记录。但是同时我又觉得博客是一个很酷的东西，起码在学生阶段，就代表你技术比别人强。</p><p>本科阶段大二就开始萌生创建博客的想法了，但因为考研的事情耽误了，因此考完研的寒假回到家我就开始准备做博客。</p><p>那时候阿里云的服务器学生有一个月免费使用机会，同时开始在网上看教程，博客分为静态框架和动态框架，静态框架部署比较简单只用把前端用<code>nginx</code>代理就行了，所以我选择了这个。在自己电脑电脑上装了<code>node.js</code>环境，用<code>npm</code>装了<code>hexo</code>框架，然后又找了一个主题<code>butterfly</code>。</p><p>完事开头难，当时没有配置文件的概念，我就在想为什么整个项目只用改了一个文件，我是那种有问题不解决就难受的性格，这个问题一直困扰我好久，就开始看各种零零散散的资料，同时一个更大的世界展示在我面前。</p><blockquote><p>现在想想也只有年纪小的时候才有那种面对未知的兴奋，以及学习成长的成就感。初三的时候我在语文课上看安娜卡列尼娜，托尔斯泰在里面描写的俄罗斯贵族社会，以及革命的火种吸引着我。列宁躺在村里的草垛上，看着深邃的星空，远离贵族的歌舞，憧憬革命的理想的自由与坚定吸引着我。</p></blockquote><p>然后就是漫长的读文档，修改配置文件。一个图标，一个链接，一个路由，一个图片慢慢的填充修改自己的东西，当时那个音乐器的功能我特别想要，但是怎么改配置都弄不出来，这个问题困扰我好久。</p><h4 id="我的第一个博客文章"><a href="#我的第一个博客文章" class="headerlink" title="我的第一个博客文章"></a>我的第一个博客文章</h4><p>当时刚考完研，本科室友说应该写个上岸贴子，说不定就有人找你辅导。我于是也跟着写了，写完之后传到自己的博客里。这也是我的一个文章。</p><h4 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h4><p>写了一个博客我就迫不及待的准备部署了（没想到这也是以后三年我唯一的一篇博客），刚开始就是直接把文件传到服务器上，然后用<code>nginx</code>代理，一切看教程（当时对<code>nginx</code>也没什么概念）。后来又想阿里云到期了咋办，于是又按照网上的方法将博客用git托管起来（当时很兴奋啊，不需要花钱就可以拥有“域名”）。把网站发给朋友们炫耀一番，兴奋劲头过了就抛到脑后了。</p><h4 id="用到的技术"><a href="#用到的技术" class="headerlink" title="用到的技术"></a>用到的技术</h4><ul><li><strong>图床：SM.MS</strong>：第一次有了图床的概念，上传很慢，但是免费</li><li><strong>图标：阿里的图标库</strong>：第一次有图标库概念</li><li><strong>评论功能：LeanCloud</strong>：因为这个主题里面集成了这个，后面知道了这是一个数据管理的工具。</li><li><strong>nginx：代理功能</strong>：在这个项目中代理前端</li><li><strong>git：托管服务</strong>：当时一直疑问为什么仓库中的文件只是本地的一部分，就可以有完整的前端界面。后来知道<code>hexo</code>自带的一键部署本质是一个自动化脚本，只将生成的前端文件<code>public</code>托管，每次博客有修改的话重新生成新的<code>public</code>文件，并将这个文件推送到远程仓库。</li></ul><h2 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h2><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><p>博客这个事情一直就搁置了，但是偶尔会登上看一下。真正让我觉得有必要做博客的的契机是，实习期间需要将学习的内容定期开会汇报，为了将工作和学习的成果记录下来，我就又捡起程序员老本行用markdown文件来记录，随着工作的深入，我对于这个行业的理解和目前自己手头任务的理解也深入了，我记录的东西越来越多了。</p><p>直到某天下班后，我在想写都写了为什么不能将这文件传到博客，以后还能翻出来看看，然后又想我平时学习的内容我都是用word记录的，传到博客上岂不是更好，平时的经历也可以记录下来。就这样越想越多。。。。。</p><h4 id="学生不应该写博客"><a href="#学生不应该写博客" class="headerlink" title="学生不应该写博客"></a>学生不应该写博客</h4><p>感觉博客是基于工作驱动，因为工作的成果需要量化，所以我们在工作中就要总结，博客只是一个汇总的地方。所以耗费的时间和精力并不大，终于理解到了这一层了。也解决了我多年的疑问：</p><p><strong>为什么学生很少用博客</strong>：因为学生的没人管，学习通过考试量化，学生还要应付考试，和工作量化的方式有区别的，单独写博客耗费的时间和精力太大了，有时间为什么不放松以下呢。</p><p><strong>结论</strong>：学生都去玩，不用写博客。</p><p><strong>坦克大战</strong>：但是又想一想，当时做的一些工作都泯灭了，也是一种遗憾把。当时用c++写了一个坦克大战的代码（兴趣来了，连着几天熬夜到三点写代码），加载界面点击启动会出来外星人电脑的图标（因为当时觉得外星人就是世界上最好的电脑），然后进入“桌面”（其实就是一个桌面图片贴图。回车再进入游戏，游戏界面会播放舒克和贝塔的音乐，这么一看界面做的确实不错。但是代码算法和逻辑bug一大堆，坦克的子弹越来越快，打中之后子弹穿过去，如果记录下来还是很有意思。现在源码找不见了，打包好的文件也找不到了。</p><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><blockquote><p>以后准备在博客上写的东西规划一下</p></blockquote><p>1.工作中的成果<br>2.技术上的总结<br>3.学习上的总结<br>4.生活中的关键事情</p><hr><p>下班下班！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【面试】使用Kimi进行模拟面试记录-1</title>
      <link href="/2024/08/30/jqms-1/"/>
      <url>/2024/08/30/jqms-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为什么选择机器面试"><a href="#为什么选择机器面试" class="headerlink" title="为什么选择机器面试"></a>为什么选择机器面试</h2><p>今天在逛知乎的时候首页看到了kimi的广告，点进去之后就玩了玩。产品的定位是<strong>帮助办公提升效率</strong>，本质上还是基于大模型的对话机器人。目前这类产品好像很多0.0，竞争好激烈（大模型无论是在科研还是市场的冲击力都是毋庸置疑的）。正好最近在学习java面试的内容，我选择了“offer收割机”的机器人。</p><h2 id="Q：帮我分析这份简历还有什么不足（我传了自己的pdf上去）"><a href="#Q：帮我分析这份简历还有什么不足（我传了自己的pdf上去）" class="headerlink" title="Q：帮我分析这份简历还有什么不足（我传了自己的pdf上去）"></a>Q：帮我分析这份简历还有什么不足（我传了自己的pdf上去）</h2><h4 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h4><ul><li>​<strong>姓名</strong>​：王若愚</li><li>​<strong>年龄</strong>​：24岁</li><li>​<strong>身高</strong>​：176cm</li><li>​<strong>专业</strong>​：电子信息（人工智能方向）</li><li>​<strong>联系方式</strong>​：提供了手机号码和邮箱，这是必要的。</li></ul><p>​<strong>建议</strong>​：可以添加LinkedIn或GitHub等专业社交平台的链接，以展示您的专业网络和代码库。</p><h4 id="教育经历"><a href="#教育经历" class="headerlink" title="教育经历"></a>教育经历</h4><ul><li>​<strong>硕士</strong>​：电子信息专业，专业排名前5%，显示了您的学术优秀。</li><li>​<strong>本科</strong>​：数据科学与大数据技术，同样来自双一流大学，有扎实的计算机科学基础。</li></ul><p>​<strong>建议</strong>​：可以突出您在学术上的成就，例如论文发表、项目参与等。</p><h4 id="实习经历"><a href="#实习经历" class="headerlink" title="实习经历"></a>实习经历</h4><ul><li>​<strong>北京润科通用技术有限公司</strong>​：技术栈广泛，涉及多个方面，显示了您的技术多样性和学习能力。</li><li>​<strong>中科品智科技有限公司</strong>​：参与了土地数据构建项目，使用了先进的技术栈。</li></ul><p>​<strong>建议</strong>​：具体化您的职责和成就，使用量化的成果来展示您的影响力，例如“提高了系统性能X%”。</p><h4 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h4><ul><li>​<strong>实验室服务器智能管理系统</strong>​：技术栈丰富，项目描述清晰。</li><li>​<strong>高分遥感图像目标识别</strong>​：显示了您在深度学习领域的研究能力。</li></ul><p>​<strong>建议</strong>​：使用“STAR”方法（Situation, Task, Action, Result）来描述项目经历，使招聘者更清楚地了解您的角色和贡献。</p><h4 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h4><ul><li>强调了学习能力、团队合作精神和沟通能力。</li></ul><p>​<strong>建议</strong>​：提供具体的例子或情景来支持您的自我评价，使其更具说服力。</p><h4 id="专业技能"><a href="#专业技能" class="headerlink" title="专业技能"></a>专业技能</h4><ul><li>列出了一系列的技术栈和开发工具，显示了您的技术广度。</li></ul><p>​<strong>建议</strong>​：可以进一步细分技能，例如将“数据库”技能细分为“熟悉MySQL的优化和Redis的缓存机制”。</p><h4 id="其他经历"><a href="#其他经历" class="headerlink" title="其他经历"></a>其他经历</h4><ul><li>获得了多个奖项，参与了社会实践活动，这些都是加分项。</li></ul><p>​<strong>建议</strong>​：突出这些经历中与软件开发相关的部分，以及它们如何为您的软件开发职业生涯增添价值。</p><h4 id="总体评价"><a href="#总体评价" class="headerlink" title="总体评价"></a>总体评价</h4><p>简历整体内容丰富，展示了您的教育背景、技术能力和项目经验。但是，可以通过以下方式进一步优化：</p><ul><li>​<strong>量化成果</strong>​：在描述经历时，使用具体的数字和成果来量化您的贡献。</li><li>​<strong>突出重点</strong>​：根据目标岗位的要求，突出最相关的技能和经验。</li><li>​<strong>清晰布局</strong>​：确保简历的布局清晰，便于招聘者快速抓住重点。</li><li>​<strong>个性化</strong>​：添加个人博客链接，展示您的个人品牌和专业兴趣。</li></ul><p>根据您提供的简历内容，我给出的简历分数是85/100。这个分数反映了简历的内容丰富度和专业性，但仍有改进空间，特别是在量化成就和突出重点方面。如果您需要进一步的帮助，例如模拟面试或定制化自我介绍模板，请随时告诉我。</p><blockquote><p>我竟然觉得分析的还可以，比如个人信息我准备添加自己博客的地址，实习经历我可以量化自己的成果，可以展示自己影响力信服力大。专业技能可以更加细分，尽量将自己的优势展现出来。奖项突出与软件开发相关。</p></blockquote><h2 id="Q：帮我安排一场目标职位是银行的java后端面试"><a href="#Q：帮我安排一场目标职位是银行的java后端面试" class="headerlink" title="Q：帮我安排一场目标职位是银行的java后端面试"></a>Q：帮我安排一场目标职位是银行的java后端面试</h2><p>既然您目标的职位是银行的Java后端开发岗位，我将根据这个岗位的特点准备一系列模拟面试问题。请注意，我们将逐步进行，每次只提出一个问题，然后继续到下一个问题。</p><h4 id="模拟面试问题列表（共8个问题，包括1个反问环节）："><a href="#模拟面试问题列表（共8个问题，包括1个反问环节）：" class="headerlink" title="模拟面试问题列表（共8个问题，包括1个反问环节）："></a>模拟面试问题列表（共8个问题，包括1个反问环节）：</h4><ol><li>​<strong>Java基础问题</strong>​：请谈谈Java中的集合框架，以及您在项目中如何使用它们。</li><li>​<strong>多线程和并发问题</strong>​：描述一下Java中的线程同步机制，以及您是如何处理并发问题的。</li><li>​<strong>Spring框架问题</strong>​：Spring框架中有哪些核心概念？请举例说明您如何使用它们。</li><li>​<strong>数据库问题</strong>​：在银行系统中，数据一致性和完整性至关重要。请谈谈您如何保证数据库操作的原子性、一致性、隔离性和持久性（ACID）。</li><li>​<strong>设计模式问题</strong>​：请描述一种您在后端开发中使用过的软件设计模式，并解释为什么选择它。</li><li>​<strong>系统架构问题</strong>​：银行系统通常需要高可用性和可扩展性。请谈谈您如何设计一个高可用的后端系统。</li><li>​<strong>安全问题</strong>​：银行系统对安全性有很高的要求。请谈谈您在开发过程中如何考虑和实现安全性。</li><li>​<strong>沟通与合作问题</strong>​：在团队项目中，您如何处理意见不合或冲突？</li></ol><p>​<strong>反问环节</strong>​：您有什么想问我的吗？</p><p>现在，让我们开始模拟面试。我们将从第一个问题开始：</p><blockquote><p>接下来是机器人提出问题我来回答，以问题为主键，下面有我的回答和机器人对我的评价。</p></blockquote><h2 id="请谈谈Java中的集合框架，以及您在项目中如何使用它们。"><a href="#请谈谈Java中的集合框架，以及您在项目中如何使用它们。" class="headerlink" title="请谈谈Java中的集合框架，以及您在项目中如何使用它们。"></a>请谈谈Java中的集合框架，以及您在项目中如何使用它们。</h2><h4 id="我的回答："><a href="#我的回答：" class="headerlink" title="我的回答："></a>我的回答：</h4><p>java中的集合框架有set，map，list，queue，在实际开发中我们要用的数据类型不确定，java集合提供了更灵活和有效的方法来处理多个数据对象，同时java集合内置了很多方法，提高了处理数据的灵活性。在实际项目中我使用更多的为hashmap，这是基于hash的一种键值对集合，通过键来生成hash值，再通过hash值索引到对应的对象的值，但是hashmap是线程不安全的，在增加hash数组的长度时候容易陷入循环，在多线程并发环境下我往往使用concurrenthashmap</p><h4 id="评价："><a href="#评价：" class="headerlink" title="评价："></a>评价：</h4><p>您对Java集合框架的描述是准确的，并且您提供了实际使用场景中的例子，特别是提到了HashMap和ConcurrentHashMap的区别，这显示了您对线程安全和并发环境下的数据结构选择有深入的理解。</p><p>​<strong>回答评估</strong>​：</p><ul><li>​<strong>优点</strong>​：您正确地识别了Java集合框架中的主要类型，并提供了HashMap的使用场景和在多线程环境下的替代方案。</li><li>​<strong>改进点</strong>​：可以进一步说明HashMap和ConcurrentHashMap在性能上的差异，以及在什么情况下选择使用它们。</li></ul><blockquote><p>这个问题回答的较为满意比较熟悉</p></blockquote><h2 id="描述一下Java中的线程同步机制，以及您是如何处理并发问题的。"><a href="#描述一下Java中的线程同步机制，以及您是如何处理并发问题的。" class="headerlink" title="描述一下Java中的线程同步机制，以及您是如何处理并发问题的。"></a>描述一下Java中的线程同步机制，以及您是如何处理并发问题的。</h2><h4 id="我的回答：-1"><a href="#我的回答：-1" class="headerlink" title="我的回答："></a>我的回答：</h4><p>java中的线程同步机制有多种方法，最常用的就是用时间片，假如我们要使ab两个线程同步，a线程的时间片用完后我们就将a线程挂起，再执行b线程，当b的时间片用完后再将b挂起，执行a线程。我们在处理并发问题的时候最容易遇到的就是死锁问题，我们可以采取加锁的方法，当a执行完之后释放资源，b才能执行。</p><h4 id="评价：-1"><a href="#评价：-1" class="headerlink" title="评价："></a>评价：</h4><p>​<strong>回答评估</strong>​：</p><ul><li>​<strong>优点</strong>​：您提到了线程同步和死锁的概念，这是处理并发问题时需要考虑的重要方面。</li><li>​<strong>改进点</strong>​：可以更具体地描述Java中的线程同步机制，例如使用<code>synchronized</code>关键字、显式锁（如<code>ReentrantLock</code>）、以及Java并发API中的其他同步工具和方法。此外，时间片的概念在操作系统层面更为常见，而在Java中，线程调度是由JVM和操作系统共同管理的。</li></ul><blockquote><p>java同步机制自己没有用过，只是了解相关知识，自己是按照操作系统层面来解释cpu单核中的同步机制，所以答案不是很准确。Java中的线程同步机制通常使用<code>synchronized</code>关键字。为了防止出现多个线程访问共享资源，导致脏数据影响系统的运行，处理并发问题必须将需要同步的线程加锁，而锁通常分为悲观锁乐观锁。在实际开发中我一般使用redis来实现分布式锁的解决方案。另外的要增加系统的并发量，我们可以增加cpu核数，在分布式系统中可以增加节点数。</p></blockquote><hr><p>下班下班，明天继续。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 八股 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研</title>
      <link href="/2022/04/11/kaoyan/"/>
      <url>/2022/04/11/kaoyan/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机专业统考考研经验贴"><a href="#计算机专业统考考研经验贴" class="headerlink" title="计算机专业统考考研经验贴"></a>计算机专业统考考研经验贴</h1><blockquote><p>本科山西大学，一志愿北京工业大学，总分362，政治71，英语二74，数学二107，408计算机综合110，初试排名39（一共招92人）。并不是一些学霸的高分经验贴，我自己起初的学习水平一般，到后面一点点进步。相信代表了大多数同学的情况，希望你能耐心看完一定会有所收获。</p></blockquote><blockquote><p>准备阶段：建议和几个同学一起买一年的百度网盘会员，便于下载收藏各科的网课和资料。有条件可以买名师的正版课程，没有条件也可以在公主号找相应的资源。</p></blockquote><hr><h2 id="第一阶段寒假之前（9-12月份）"><a href="#第一阶段寒假之前（9-12月份）" class="headerlink" title="第一阶段寒假之前（9-12月份）"></a>第一阶段寒假之前（9-12月份）</h2><ul><li>英语：大量多次复习英语单词，如果英语基础比较薄弱可以加上长难句，在这个阶段英语基本功慢慢变好，可以尽早通过四六级考试。</li><li>数学：如果数学基础也比较薄弱，可以买基础张宇30讲（或者任意自己喜欢的老师的基础书）外加相应老师的视频课程。初步构建数学知识体系和结构。<blockquote><p>学习的节奏最好每周学习几天，最天学一上午或者一下午（大约3-4小时就够了)。切记不要学习的太过用力，大部分人的大一大二是比较放纵的状态，学习的状态需要的是慢慢适应。</p></blockquote><h2 id="第二阶段寒假之后（3-7月份）"><a href="#第二阶段寒假之后（3-7月份）" class="headerlink" title="第二阶段寒假之后（3-7月份）"></a>第二阶段寒假之后（3-7月份）</h2></li><li>英语：继续复习英语单词，最少这个时候准备开始长难句，买一本练习册练一遍之后就会发现进步，同时继续冲击四六级考试。</li><li>数学：可以买一本基础题练习册进行训练（推荐<strong>汤家凤1800</strong>），并且继续巩固基础，如果觉得基础不牢不要买进一步练习册（例如李永乐660，李林880）。这个阶段不需要写难的题。</li><li>专业课：初步阶段，直接看王道的四本辅导书，课后题写选择题就好了，同样的不要纠结于大题。一定要看b站上免费的王道课程讲的非常好，不管是不是统考的都建议看。<blockquote><p>学习节奏是建议除周六日每天都学习6-8小时，已经可以完成以上任务了，同样的不要太用力。主要是养成学习习惯，并且构建英语，数学，专业课的体系。</p></blockquote><h2 id="第三个阶段暑假（7-8月份）"><a href="#第三个阶段暑假（7-8月份）" class="headerlink" title="第三个阶段暑假（7-8月份）"></a>第三个阶段暑假（7-8月份）</h2></li><li>英语：继续背单词，并且开始写历年真题（推荐从划分英一英二的那年开始从前往后刷），如果错误率过高，推荐看唐迟的阅读的逻辑网课。按照老师的方法来，慢慢提高正确率。</li><li>数学：1800没刷完的继续刷（应该大部分人都没刷完），刷完的刷李林880，这个阶段非常建议看武忠祥的强化课，线代看李永乐强化课。看完课再结合写的题总结总结，你对数学这一科的理解和基础已经非常扎实了。</li><li>专业课：和上一阶段的任务一样，如果学的已经基础比较好进度快的话，可以写王道辅导书课后题的大题，结合自己学习的知识反复加深理解，千万不要陷入某些误区，遇到不懂的上网查，或者反复看视频直到自己理解为止。</li><li>政治：看肖秀荣的知识点的书并开始一刷<strong>肖秀荣1000题</strong>，对错误率高的或者实在理解不了的知识点，看相应的网课例如徐涛或者腿姐。<blockquote><p>学习节奏最容易被打乱的时期，能留在学习就在学校，在家学习最好找个自习室。这样学习效率才会高，建议周可以学习五六天，每天八小时，适当休息。</p></blockquote><h2 id="第四个阶段暑假后（9-12月份）"><a href="#第四个阶段暑假后（9-12月份）" class="headerlink" title="第四个阶段暑假后（9-12月份）"></a>第四个阶段暑假后（9-12月份）</h2></li><li>英语：按照节奏刷真题，背单词，二刷真题，一定要背大作文模板（大大节省考试时间），真题可以留两三套，考试前两周模拟。</li><li>数学：继续刷李林880，或者李永乐660，比较进阶的题目。同时开始刷真题，并且一定要总结打百分卷。这个阶段推荐<strong>武忠祥的十七堂课</strong>，同时大量的模拟卷子也要留出时间做。真题留近两年模拟。</li><li>专业课：复习408的话要一定要开始写近真题了，近15年的真题从前往后写，9月份就开始，写完更正错题，并且不熟悉的知识点反复记忆理解。考前一个月再把写过的真题拿出来，二刷，这时尽量保持每张卷子都有130分以上。同样留近两三年的真题考前模拟。</li><li>政治：一定一定要买腿姐小册子，并全部背诵。同时二刷肖秀荣1000题的错题，考前一段时间时政出来后，一定要跟着一个老师看一些时政相关的网课，并且打印资料记忆，有时间多做一些模拟卷子的选择题（肖四肖八腿四）等。尽量慢慢的提高选择题正确率，从30+到40+。大题的话等到最后一个月开始背押题，陆续各个老师的押题预测开始，任意一个老师都可以，压不压中题是运气问题，但是背的多就有话可说。<blockquote><p>学习的节奏最好保持每天8-10小时。</p></blockquote><h2 id="第五阶段考研前一周"><a href="#第五阶段考研前一周" class="headerlink" title="第五阶段考研前一周"></a>第五阶段考研前一周</h2>英语看看错题，写一两张真题练手，数学看看错题，写一两张真题练手，政治继续背大题，背到考研前一天。专业课，看看错题，练练基本的算法，写一两张卷子。（以上卷子都写在标准答题卡上，找找感觉），政治大题写在答题卡默写非常有可能出的题。</li></ul><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>前期打基础，中期查漏补缺，后期写真题多刷题，培养应试技巧。心态和实力同等重要。</p><p>若有疑问或者其他咨询可以留言或者加QQ：1026597811</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 校园 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
